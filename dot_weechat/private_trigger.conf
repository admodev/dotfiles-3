#
# weechat -- trigger.conf
#
# WARNING: It is NOT recommended to edit this file by hand,
# especially if WeeChat is running.
#
# Use /set or similar command to change settings in WeeChat.
#
# For more info, see: https://weechat.org/doc/quickstart
#

[look]
enabled = on
monitor_strip_colors = off

[color]
flag_command = lightgreen
flag_conditions = yellow
flag_post_action = lightblue
flag_regex = lightcyan
flag_return_code = lightmagenta
regex = white
replace = cyan
trigger = green
trigger_disabled = red

[trigger]
autosort_refresh_on_setdict.arguments = "spell.dict.*;spell.check.default_dict"
autosort_refresh_on_setdict.command = "/mute /autosort"
autosort_refresh_on_setdict.conditions = ""
autosort_refresh_on_setdict.enabled = on
autosort_refresh_on_setdict.hook = config
autosort_refresh_on_setdict.post_action = none
autosort_refresh_on_setdict.regex = ""
autosort_refresh_on_setdict.return_code = ok
beep.arguments = ""
beep.command = "/print -beep"
beep.conditions = "${tg_displayed} && ${tg_tags} !!- ,notify_none, && (${tg_highlight} || ${tg_msg_pv})"
beep.enabled = on
beep.hook = print
beep.post_action = none
beep.regex = ""
beep.return_code = ok
buflist_fold_symbol_click.arguments = "1001|buflist_mouse"
buflist_fold_symbol_click.command = "/toggle_bufautoset localvar_set_fold ${full_name}"
buflist_fold_symbol_click.conditions = "${localvar_type} == server && ${plugins.var.buflist_subsection_fold} != && (${plugins.var.buflist_subsection_buffer_number} != && ${_bar_item_col} == ${lengthscr:${buffer[last_gui_buffer].number}.} || ${plugins.var.buflist_subsection_buffer_number} == && ${_bar_item_col} == 0)"
buflist_fold_symbol_click.enabled = on
buflist_fold_symbol_click.hook = hsignal
buflist_fold_symbol_click.post_action = none
buflist_fold_symbol_click.regex = ""
buflist_fold_symbol_click.return_code = ok_eat
buflist_refresh_options.arguments = "weechat.bar.buflist.size*;plugins.var.buflist_*"
buflist_refresh_options.command = "/buflist refresh"
buflist_refresh_options.conditions = ""
buflist_refresh_options.enabled = on
buflist_refresh_options.hook = config
buflist_refresh_options.post_action = none
buflist_refresh_options.regex = ""
buflist_refresh_options.return_code = ok
buflist_resize.arguments = "buflist_resize"
buflist_resize.command = "/mute /set plugins.var.buflist_section_${my_section} ${calc:${plugins.var.buflist_section_${my_section}} ${if:${_key}=~up$?-:+} 1};/bar set ${_bar_name} size ${calc:${weechat.bar.${_bar_name}.size} ${if:${_key}=~up$?-:+} 1}"
buflist_resize.conditions = "${_key}=~down || ${_key}=~up && (${_bar_item_col} < ${plugins.var.buflist_section_1st} && ${plugins.var.buflist_section_1st} > 1 || ${_bar_item_col} >= ${plugins.var.buflist_section_1st} && ${plugins.var.buflist_section_2nd} > 1)"
buflist_resize.enabled = on
buflist_resize.hook = hsignal
buflist_resize.post_action = none
buflist_resize.regex = "/.*/${if:${_bar_item_col}<${plugins.var.buflist_section_1st}?1st:2nd}/my_section"
buflist_resize.return_code = ok
buflist_tools.arguments = "buflist_tools;manage pascalpoitras's custom buflist (https://gist.github.com/pascalpoitras/8406501);resize <buflist_size> <1st_section_size>|? [<2nd_section_size>] || hide|show|toggle <subsection>|-old|-new|-all [<subsection>...];          resize: resize the buflist size and the two sections${\n}            hide: hide a subsection${\n}            show: show a subsection${\n}          toggle: toggle a subsection${\n}    buflist_size: new size for the buflist${\n}1st_section_size: size of first section${\n}2nd_section_size: size of second section${\n}      subsection: a subsection (buffer_number, fold, indent, nick_prefix, buffer_name, lag, filter, relay_count, extra, hotlist)${\n}            -old: only the old buflist sections (buffer_number, indent, buffer_name, filter, relay_count, extra, hotlist)${\n}            -new: only the new buflist sections (fold, nick_prefix, lag)${\n}            -all: do action on all subsections${\n}${\n}The buflist is composed of two sections. The first one is composed of nine subsections. The buffer number, the fold symbol (servers only), the indentation, the nick prefix (channels only), the buffer name, the lag (servers only), the filter (on some buffer like fset, scripts...), the relay count (for the relay buffer) and extra infos about a buffer. The second section is only composed of hotlist. The two sections can be resized independently. If you want to hide a subsection, for example, buffer_number, the bar will not be resized and the section will not be resized too. So you will have more space for the other subsection of the first section. If you want to hide the hotlist, you can use the hide command but then the second subsection will be empty and use space for nothing, space that cant be used by the first section. So if you want to hide the hotlist, you'd be better off using resize and give all the spaces to the first section. TLDR if you're not gonna use the hotlist, do not reserve space for it in the first place.${\n}${\n}Exemples:${\n}  Resize the bar to 20 with the size 15 for first section and 5 for second section:${\n}    /buflist_tools resize 20 15${\n}  Show only the sections that was available in the old buflist:${\n}    /buflist_tools hide -all${\n}    /buflist_tools show -old;resize 25 || show|hide|toggle buffer_number|fold|indent|nick_prefix|buffer_name|lag|filter|relay_count|extra|hotlist|-old|-new|-all|%*"
buflist_tools.command = "/eval -s ${if:${tg_argv1}==resize?/mute /set plugins.var.buflist_section_1st ${tg_argv3}\;/mute /set plugins.var.buflist_section_2nd ${tg_argv4}\;/bar set buflist size ${tg_argv2}:${tg_argv_eol2}}"
buflist_tools.conditions = "${tg_argv1} =~ ^(hide|show|toggle)$ && ${tg_argv_eol2} =~ ^((buffer_number|fold|indent|nick_prefix|buffer_name|lag|filter|relay_count|extra|hotlist|-old|-new|-all)( +|$))+$ || ${tg_argv1} == resize && ${tg_argv2} =~ ^[0-9]+$ && (${tg_argv3} =~ ^[0-9]+$ && ${tg_argv4} =~ ^[0-9]*$ || ${tg_argv3} == ? && ${tg_argv4} =~ ^[0-9]+$)"
buflist_tools.enabled = on
buflist_tools.hook = command
buflist_tools.post_action = none
buflist_tools.regex = "/\?/${calc:${tg_argv2}-${tg_argv4}}/tg_argv3 /^$/${if:${tg_argv1}==resize?${calc:${tg_argv2}-${tg_argv3}}}/tg_argv4 /-old/buffer_number indent buffer_name filter relay_count extra hotlist/tg_argv_eol2 /-new/fold nick_prefix lag/tg_argv_eol2 /-all/buffer_number fold indent nick_prefix buffer_name lag filter relay_count extra hotlist/tg_argv_eol2 ===buffer_number|fold|indent|nick_prefix|buffer_name|lag|filter|relay_count|extra|hotlist===/mute /set plugins.var.buflist_subsection_${re:0} ${if:${tg_argv1}==hide?0:${if:${tg_argv1}==show?1:${if:${plugins.var.buflist_subsection_${re:0}}?0:1}}};===tg_argv_eol2"
buflist_tools.return_code = ok
cmd_pass.arguments = "5000|input_text_display;5000|history_add;5000|irc_command_auth"
cmd_pass.command = ""
cmd_pass.conditions = ""
cmd_pass.enabled = on
cmd_pass.hook = modifier
cmd_pass.post_action = none
cmd_pass.regex = "==^((/(msg|m|quote) +(-server +[^ ]+ +)?nickserv +(id|identify|set +password|ghost +[^ ]+|release +[^ ]+|regain +[^ ]+|recover +[^ ]+) +)|/oper +[^ ]+ +|/quote +pass +|/secure +(passphrase|decrypt|set +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}"
cmd_pass.return_code = ok
cmd_pass_register.arguments = "5000|input_text_display;5000|history_add;5000|irc_command_auth"
cmd_pass_register.command = ""
cmd_pass_register.conditions = ""
cmd_pass_register.enabled = on
cmd_pass_register.hook = modifier
cmd_pass_register.post_action = none
cmd_pass_register.regex = "==^(/(msg|m|quote) +nickserv +register +)([^ ]+)(.*)==${re:1}${hide:*,${re:3}}${re:4}"
cmd_pass_register.return_code = ok
control_buffers_change_control_window.arguments = "plugins.var.control_buffers_window"
control_buffers_change_control_window.command = "/window refresh"
control_buffers_change_control_window.conditions = ""
control_buffers_change_control_window.enabled = on
control_buffers_change_control_window.hook = config
control_buffers_change_control_window.post_action = none
control_buffers_change_control_window.regex = ""
control_buffers_change_control_window.return_code = ok
day_changed_upgrade_scripts.arguments = "day_changed"
day_changed_upgrade_scripts.command = "/script update;/wait 10s /script upgrade"
day_changed_upgrade_scripts.conditions = ""
day_changed_upgrade_scripts.enabled = on
day_changed_upgrade_scripts.hook = signal
day_changed_upgrade_scripts.post_action = none
day_changed_upgrade_scripts.regex = ""
day_changed_upgrade_scripts.return_code = ok
highmon_like.arguments = "*;irc_privmsg"
highmon_like.command = "/print -newbuffer highmon -tags ${tg_tags} ${cutscr:4,${color:${weechat.color.chat_prefix_more}}${weechat.look.prefix_buffer_align_more},${color:${info:nick_color_name,${server}}}${server}}${color:${info:nick_color_name,${channel}}}${channel}\t${if:${tg_tags} !~ ,irc_action,?${weechat.look.quote_nick_prefix}${tg_prefix}${color:reset}${weechat.look.quote_nick_suffix}:${tg_prefix}${color:reset}} ${tg_message}"
highmon_like.conditions = "${tg_highlight} == 1 && ${tg_displayed} == 1 && ${buffer.local_variables.type} == channel && ${buffer.full_name} != irc.bitlbee.&bitlbee"
highmon_like.enabled = on
highmon_like.hook = print
highmon_like.post_action = none
highmon_like.regex = ""
highmon_like.return_code = ok
modifier_is_nick_valid.arguments = "input_text_display"
modifier_is_nick_valid.command = ""
modifier_is_nick_valid.conditions = "${tg_string_nocolor} =~ ^/nick .+ && ${buffer.plugin.name} == irc"
modifier_is_nick_valid.enabled = on
modifier_is_nick_valid.hook = modifier
modifier_is_nick_valid.post_action = none
modifier_is_nick_valid.regex = "===.*===${info:irc_server_isupport_value,${server},CASEMAPPING}===my_casemapping ===.*===${info:irc_server_isupport_value,${server},UTF8MAPPING}===my_utf8mapping ===.*===${info:irc_server_isupport_value,${server},NICKLEN}===my_nicklen ===^/nick (.+)===/nick ${if:${info:irc_is_nick,${server},${re:1}}!=&&${length:${re:1}}<=${my_nicklen}?${color:green}:${color:red}}${re:1}   -- NICKLEN: ${calc:${my_nicklen} - ${length:${re:1}}}/${my_nicklen} -- Allowed Chars: ${my_casemapping} ${my_utf8mapping}===tg_string"
modifier_is_nick_valid.return_code = ok
msg_auth.arguments = "5000|irc_message_auth"
msg_auth.command = ""
msg_auth.conditions = ""
msg_auth.enabled = on
msg_auth.hook = modifier
msg_auth.post_action = none
msg_auth.regex = "==^(.*(id|identify|set +password|register|ghost +[^ ]+|release +[^ ]+|regain +[^ ]+|recover +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}"
msg_auth.return_code = ok
news_click.arguments = "news_click"
news_click.command = "/command -buffer ${buffer.full_name} core /input insert ${if:${_key}==m?${_chat_line_message} }${_chat_line_tags}\x20"
news_click.conditions = ""
news_click.enabled = on
news_click.hook = hsignal
news_click.post_action = none
news_click.regex = "/(^|.*,)url_([^,]+)(,.*|$)/${re:2}/_chat_line_tags /#/+/_chat_line_tags /.*/${base_decode:64,${re:0}}/_chat_line_tags"
news_click.return_code = ok
news_modifier.arguments = "weechat_print"
news_modifier.command = "/print -buffer ${tg_buffer} -tags ${tg_tags},url_${tg_message_nocolor} \t${tg_prefix}${color:reset}${tg_message}"
news_modifier.conditions = "${tg_tag_nick} =~ ^newsly_? && ${tg_tags} =~ ,irc_privmsg, && ${tg_buffer} == irc.freenode.##news"
news_modifier.enabled = on
news_modifier.hook = modifier
news_modifier.post_action = none
news_modifier.regex = "/.*// /.*/${tg_message_nocolor}/tg_prefix /.*/${tg_message_nocolor}/tg_message /^\[[^]]+\]//tg_message /^\[([^]]+)\].*/${re:1}/tg_prefix /^([^\-]+)/${color:_black,${info:nick_color_name,${re:1}}} ${re:1}/tg_prefix / - / ${color:-underline} /tg_prefix /$/ ${color:!}/tg_prefix ==\(?https?://.*====tg_message ==.*(https?://\S+).*==${re:1}==tg_message_nocolor /\+/%2B/tg_message_nocolor /,/%2C/tg_message_nocolor /\!/%21/tg_message_nocolor /\*/%2A/tg_message_nocolor"
news_modifier.return_code = ok
news_transform.arguments = "*;irc.freenode.##news;irc_privmsg+nick_newsly*"
news_transform.command = ""
news_transform.conditions = ""
news_transform.enabled = on
news_transform.hook = line
news_transform.post_action = none
news_transform.regex = "/.*/${tg_message_nocolor}/site_name /^\[([^]]+)\].*/${re:1}/site_name /.*/${tg_message_nocolor}/title /^\[[^]]+\]//title / - / ${color:-underline} /site_name /.*/${site_name}/site_color /^([^]+).*/${info:nick_color_name,${re:1}}/site_color /.*/${title}/url ==.*(https?://[^ ]+).*==${re:1}==url /.*/${base_encode:64,${url}}/url /\+/#/url /$/url_${url}/tags ==https?://[^ ]+ .*====title /.*/${color:_black,${site_color}} ${site_name} ${color:${site_color},default}${color:reset}${title}/message /.*//prefix"
news_transform.return_code = ok
server_pass.arguments = "5000|input_text_display;5000|history_add"
server_pass.command = ""
server_pass.conditions = ""
server_pass.enabled = on
server_pass.hook = modifier
server_pass.post_action = none
server_pass.regex = "==^(/(server|connect) .*-(sasl_)?password=)([^ ]+)(.*)==${re:1}${hide:*,${re:4}}${re:5}"
server_pass.return_code = ok
toggle_bufautoset.arguments = "toggle_bufautoset;toggle bufautoset options;<buffer_property> <buffer_fullname>;buffer_property: name of the property${\n}buffer_fullname: name of the buffer${\n}${\n}The buffer_autoset.py script has no toggle mechanism so this command bring this functionality. Also, the script does not reset a property or localvar after deleting them. For example, if you type /buffer_autoset add irc.freenode.#weechat localvar_set_something 1, and then, /buffer_autoset del irc.freenode.#weechat.localvar_set_something, the localvar will still appears in /buffer localvar until you close and reoppen the buffer. This command will remove the localvar and hidden property upon deletion. You should use this command only for properties that take 0 or 1 as value or localvar that take 0 or 1.;;"
toggle_bufautoset.command = "/mute /buffer_autoset ${if:${buffer_autoset.buffer.${my_full_name}.${my_property}}?del ${my_full_name}.${my_property}:add ${my_full_name} ${my_property} 1};/command -buffer ${my_full_name} * /buffer set ${my_property} ${if:${buffer_autoset.buffer.${my_full_name}.${my_property}}?1:0}"
toggle_bufautoset.conditions = "${tg_argv2} !="
toggle_bufautoset.enabled = on
toggle_bufautoset.hook = command
toggle_bufautoset.post_action = none
toggle_bufautoset.regex = "/.*/${tg_argv1}/my_property /.*/${tg_argv2}/my_full_name"
toggle_bufautoset.return_code = ok
toggle_property.arguments = "toggle_property"
toggle_property.command = "/toggle_bufautoset ${my_property} ${my_full_name}"
toggle_property.conditions = ""
toggle_property.enabled = on
toggle_property.hook = hsignal
toggle_property.post_action = none
toggle_property.regex = "/.*/${if:${_chat}?${_buffer_full_name}:${full_name}}/my_full_name /.*/${buffer[${pointer}].local_variables.script_name}/script_name /.*/${if:${_key}==f?${plugin}.${if:${plugin}==irc||${script_name}==matrix?server.}${localvar_server}:${re:0}}/my_full_name /.*/${_key}/my_property /^button1.*/localvar_set_control_buffer/my_property /(?-i)^c$/localvar_set_control_buffer/my_property /(?-i)^C$/localvar_set_no_chanmon_like/my_property /(?-i)^f$/localvar_set_fold/my_property /(?-i)^h$/hidden/my_property"
toggle_property.return_code = ok
utils_holiday.arguments = "holiday"
utils_holiday.command = ""
utils_holiday.conditions = "${tg_arguments} =~ ^(0[1-9]|[1-2][0-9]|3[0-1])-(0[1-9]|1[0-2])$"
utils_holiday.enabled = on
utils_holiday.hook = info
utils_holiday.post_action = none
utils_holiday.regex = "/.*/${tg_arguments}/ /01-01/HAPPY NEW YEAR!/ /25-12/MERRY CHRISTMAS!/ /[0-9][0-9]-[0-9][0-9]//"
utils_holiday.return_code = ok
weather_cmd_weather.arguments = "weather;show the weather, using wttr.in, in a new buffer;<location>;;${plugins.var.weather_place}"
weather_cmd_weather.command = "/exec -noflush -norc -noln -buffer weather curl -s http://wttr.in/${tg_argv_eol1}?lang=${my_lang}"
weather_cmd_weather.conditions = "${tg_argv_eol1}"
weather_cmd_weather.enabled = on
weather_cmd_weather.hook = command
weather_cmd_weather.post_action = none
weather_cmd_weather.regex = "/ /+/tg_argv_eol1 /.*/${info:spell_dict,exec.exec.weather}/my_lang /^([^,]+).*/${re:1}/my_lang /^$/en/my_lang"
weather_cmd_weather.return_code = ok
weather_get_weather_by_shortcut.arguments = "input_text_for_buffer"
weather_get_weather_by_shortcut.command = ""
weather_get_weather_by_shortcut.conditions = "${buffer[${tg_modifier_data}].full_name} == exec.exec.weather && /${weechat.look.command_chars} !- ${cut:1,,${tg_string_nocolor}}"
weather_get_weather_by_shortcut.enabled = on
weather_get_weather_by_shortcut.hook = modifier
weather_get_weather_by_shortcut.post_action = none
weather_get_weather_by_shortcut.regex = "==.*==/weather ${re:0}"
weather_get_weather_by_shortcut.return_code = ok
weather_recreate_cmd.arguments = "plugins.var.weather_place"
weather_recreate_cmd.command = "/trigger restart weather_cmd_weather"
weather_recreate_cmd.conditions = ""
weather_recreate_cmd.enabled = on
weather_recreate_cmd.hook = config
weather_recreate_cmd.post_action = none
weather_recreate_cmd.regex = "/ /+/"
weather_recreate_cmd.return_code = ok
weather_set_weather_buffer_title.arguments = "exec.exec.weather;exec_stdout;;1"
weather_set_weather_buffer_title.command = "/buffer set title ${tg_message};/buffer set localvar_set_extra ${tg_message_nocolor}"
weather_set_weather_buffer_title.conditions = "${tg_message} =~ ^\w && ${tg_message} !~ wttr\.in|@igor_chubin"
weather_set_weather_buffer_title.enabled = on
weather_set_weather_buffer_title.hook = print
weather_set_weather_buffer_title.post_action = none
weather_set_weather_buffer_title.regex = "/^[^:]+:(.*)/${re:1}/tg_message_nocolor"
weather_set_weather_buffer_title.return_code = ok
